package com.lzz.swing.mgr;

import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Hashtable;
import java.util.Map;

import javax.swing.BorderFactory;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.border.Border;

import com.lzz.swing.component.LzzImageIcon;
import com.lzz.swing.view.LzzIndexFrm;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

/**
 * 菜单管理类
 * @author Administrator
 *
 */
public class LzzMenuMgr {
	/**
	 * 默认菜单图标宽度
	 */
	private static int smDeaultMenuIconWidth = 30;
	/**
	 * 默认菜单图标高度
	 */
	private static int smDeaultMenuIconHeight = 30;
	/**
	 * 默认菜单尺寸
	 */
	private static Dimension smDefaultMenuDimension = new Dimension(150, 50);
	
	/**
	 * 默认子菜单图标宽度
	 */
	private static int smDeaultSubMenuIconWidth = 20;
	/**
	 * 默认子菜单图标高度
	 */
	private static int smDeaultSubMenuIconHeight = 20;
	/**
	 * 默认子菜单尺寸
	 */
	private static Dimension smDefaultSubMenuDimension = new Dimension(100, 50);
	
	/**
	 * 默认菜单边框
	 */
	private static Border smDefaultMenuBorder = BorderFactory.createMatteBorder(0, 0, 0, 2, LzzColorFontMgr.smTextColor);
	/**
	 * 默认子菜单边框
	 */
	private static Border smDefaultSubMenuBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, LzzColorFontMgr.smTextColor);
	
	private static String smDefaultQueryIcon = "/images/query.png";
	private static String smDefaultRepairIcon = "/images/repair.png";
	private static String smAlarmHandleIcon = "/images/alarmIcon.png";
	private static String smDefaultSetIcon = "/images/set.png";
	private static String smDefaultImportIcon = "/images/import.png";
	private static String smDefaultAboutIcon = "/images/about.png";
	private static String smDefaultIndexIcon = "/images/index.png";
	
	private static String smDefaultSubMenuIcon = "/images/subMenuIcon.png";
	
	/**
	 * 菜单对应显示的面板名称
	 */
	private static Map<String, String> menuPanelNames = new Hashtable<String, String>();
	/**
	 * 菜单名称对应的面板
	 */
	private static Map<String, JPanel> namePanels = new Hashtable<String, JPanel>();
	/**
	 * 当前显示的面板
	 */
	private static JPanel curPanel = null;
	
	private static LzzIndexFrm mainFrame;
	
	private static JMenu curSelectParentMenu = null;
	private static JMenu curSelectMenu = null;
	private static JMenuItem curSelectMenuItem = null;
	 
	private static Map<String, JMenuItem> menus = new Hashtable<String, JMenuItem>();
	/**
	 * 创建信息查询菜单
	 * @return
	 */
	public static JMenu createInfoQueryMenu(){
		String name = "信息查询";
		String icon = smDefaultQueryIcon;
		String struct = "{"
						+	"name:\"" + name + "\","
						+	"icon:\"" + icon + "\","
						+	"callBackFun:\"\","
						+	"subMenus:["
						+		"{"
						+			"name:\"基础信息\","
						+			"icon:\"" + smDefaultSubMenuIcon + "\","
						+			"callBackFun:\"showPanel\","
						+			"callBackPar:\"信息查询-基础信息\""
						+		"},"
						+		"{"
						+			"name:\"实时信息\","
						+			"icon:\"" + smDefaultSubMenuIcon + "\","
						+			"callBackFun:\"\","
						+			"subMenus:["
						+				"{"
						+					"name:\"传感器\","
						+					"icon:\"" + smDefaultSubMenuIcon + "\","
						+					"callBackFun:\"showPanel\","
						+					"callBackPar:\"信息查询-实时信息-传感器\""
						+				"},"
						+				"{"
						+					"name:\"电子地图\","
						+					"icon:\"" + smDefaultSubMenuIcon + "\","
						+					"callBackFun:\"showPanel\","
						+					"callBackPar:\"信息查询-实时信息-电子地图\""
						+				"},"
						+				"{"
						+					"name:\"视频监控\","
						+					"icon:\"" + smDefaultSubMenuIcon + "\","
						+					"callBackFun:\"showPanel\","
						+					"callBackPar:\"信息查询-实时信息-视频监控\""
						+				"}"
						+			"]"
						+		"},"
						+		"{"
						+			"name:\"历史信息\","
						+			"icon:\"" + smDefaultSubMenuIcon + "\","
						+			"callBackFun:\"showPanel\","
						+			"callBackPar:\"信息查询-历史信息\""
						+		"}"
						+	"]"
						+"}";
		
		JSONObject menu_struct = JSONObject.fromObject(struct);
		return createMenu(null, menu_struct);
	}
	
	/**
	 * 创建故障报修菜单
	 * @return
	 */
	public static JMenu createRepairMenu(){
		String name = "故障报修";
		String icon = smDefaultRepairIcon;
		String struct = "{"
				+	"name:\"" + name + "\","
				+	"icon:\"" + icon + "\","
				+	"callBackFun:\"showPanel\","
				+	"callBackPar:\"故障报修\""
				+"}";
		
		JSONObject menu_struct = JSONObject.fromObject(struct);
		return createMenu(null, menu_struct);
	}
	
	/**
	 * 创建系统设置菜单
	 * @return
	 */
	public static JMenu createSysSetMenu(){
		String name = "系统设置";
		String icon = smDefaultSetIcon;
		String struct = "{"
				+	"name:\"" + name + "\","
				+	"icon:\"" + icon + "\","
				+	"callBackFun:\"\","
				+	"subMenus:["
				+		"{"
				+			"name:\"人员管理\","
				+			"icon:\"" + smDefaultSubMenuIcon + "\","
				+			"callBackFun:\"showPanel\","
				+			"callBackPar:\"系统设置-人员管理\""
				+		"},"
				+		"{"
				+			"name:\"公交管理\","
				+			"icon:\"" + smDefaultSubMenuIcon + "\","
				+			"callBackFun:\"showPanel\","
				+			"callBackPar:\"系统设置-公交管理\""
				+		"}"
				+	"]"
				+"}";
		
		JSONObject menu_struct = JSONObject.fromObject(struct);
		return createMenu(null, menu_struct);
	}
	
	/**
	 * 创建数据导入菜单
	 * @return
	 */
	public static JMenu createDataImportMenu(){
		String name = "数据导入";
		String icon = smDefaultImportIcon;
		String struct = "{"
				+	"name:\"" + name + "\","
				+	"icon:\"" + icon + "\","
				+	"callBackFun:\"showPanel\","
				+	"callBackPar:\"数据导入\""
				+"}";
		
		JSONObject menu_struct = JSONObject.fromObject(struct);
		return createMenu(null, menu_struct);
	}
	
	/**
	 * 创建关于软件菜单
	 * @return
	 */
	public static JMenu createAboutMenu(){
		String name = "关于软件";
		String icon = smDefaultAboutIcon;
		String struct = "{"
				+	"name:\"" + name + "\","
				+	"icon:\"" + icon + "\","
				+	"callBackFun:\"showPanel\","
				+	"callBackPar:\"关于软件\""
				+"}";
		
		JSONObject menu_struct = JSONObject.fromObject(struct);
		return createMenu(null, menu_struct);
	}
	
	/**
	 * 创建首页菜单
	 * @return
	 */
	public static JMenu createIndexMenu(){
		String name = "首页";
		String icon = smDefaultIndexIcon;
		String struct = "{"
				+	"name:\"" + name + "\","
				+	"icon:\"" + icon + "\","
				+	"callBackFun:\"showPanel\","
				+	"callBackPar:\"首页\""
				+"}";
		
		JSONObject menu_struct = JSONObject.fromObject(struct);
		return createMenu(null, menu_struct);
	}
	
	/**
	 * 创建报警处理菜单
	 * @return
	 */
	public static JMenu createAlarmHandleMenu(){
		String name = "报警处理";
		String icon = smAlarmHandleIcon;
		String struct = "{"
				+	"name:\"" + name + "\","
				+	"icon:\"" + icon + "\","
				+	"callBackFun:\"showPanel\","
				+	"callBackPar:\"报警处理\""
				+"}";
		
		JSONObject menu_struct = JSONObject.fromObject(struct);
		return createMenu(null, menu_struct);
	}
	
	/**
	 * 根据菜单结构数据创建菜单
	 * @param menu_struct
	 * @return
	 */
	private static JMenu createMenu(final JMenu parent_menu, JSONObject menu_struct){
		if(null==menu_struct) return null;
		
		final JMenu jMenu = new JMenu(menu_struct.getString("name"));
		jMenu.setIcon(new LzzImageIcon(menu_struct.getString("icon"), smDeaultMenuIconWidth, smDeaultMenuIconHeight));
        jMenu.setForeground(LzzColorFontMgr.smTextColor);
        jMenu.setPreferredSize(smDefaultMenuDimension);
        jMenu.setBorder(smDefaultMenuBorder);
        jMenu.setFont(LzzColorFontMgr.smMenuTextFont);
        jMenu.setOpaque(true);
        jMenu.setBackground(LzzColorFontMgr.smUIHeadBkColor);
        
        if(!menu_struct.containsKey("subMenus")){
        	final String call_back_fun = (String)menu_struct.get("callBackFun");
        	final String call_back_par = (String)menu_struct.get("callBackPar");
        	if(null!=call_back_fun && !"".equals(call_back_fun)){//菜单有对应面板，添加事件并记录对应关系
        		jMenu.addMouseListener(new MouseAdapter() {
        			@Override
        			public void mousePressed(MouseEvent arg0) {
        				try {
        					Method call_back = mainFrame.getClass().getMethod(call_back_fun, new Class[]{String.class});
        					call_back.invoke(mainFrame, call_back_par);
        					
        					selectMenu(parent_menu, jMenu, null);
						} catch (NoSuchMethodException | SecurityException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
        			}
        		});
        	}
        	
        	return jMenu;
        }
        
        JSONArray sub_menus = menu_struct.getJSONArray("subMenus");
        for(int i=0; i<sub_menus.size(); i++){
        	JSONObject menu_item = sub_menus.getJSONObject(i);
        	
        	//是父菜单
        	if(menu_item.containsKey("subMenus")){
        		JMenu tmp = createMenu(jMenu, menu_item);
        		jMenu.add(tmp);
        		continue;
        	}
        	
        	final JMenuItem item = new JMenuItem(menu_item.getString("name"));
        	item.setName(menu_item.getString("name"));
        	
        	String icon = menu_item.getString("icon");
        	if(null!=icon && !"".equals(icon)){
        		item.setIcon(new LzzImageIcon(icon, smDeaultMenuIconWidth, smDeaultMenuIconHeight));
        	}
        	item.setForeground(LzzColorFontMgr.smTextColor);
        	item.setPreferredSize(smDefaultMenuDimension);
        	item.setBorder(smDefaultSubMenuBorder);
        	item.setFont(LzzColorFontMgr.smMenuTextFont);
        	item.setBackground(LzzColorFontMgr.smUIHeadBkColor);
        	
        	final String call_back_fun = (String)menu_item.get("callBackFun");
        	final String call_back_par = (String)menu_item.get("callBackPar");
        	if(null!=call_back_fun && !"".equals(call_back_fun)){//菜单有对应面板，添加事件并记录对应关系
        		item.addMouseListener(new MouseAdapter() {
        			@Override
        			public void mousePressed(MouseEvent arg0) {
        				try {
        					Method call_back = mainFrame.getClass().getMethod(call_back_fun, new Class[]{String.class});
        					call_back.invoke(mainFrame, call_back_par);

        					selectMenu(parent_menu, jMenu, item);
						} catch (NoSuchMethodException | SecurityException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
        			}
        		});
        	}
        	jMenu.add(item);
        }
        return jMenu;
	}

	protected static void selectMenu(JMenu parent_menu, JMenu menu, JMenuItem item) {
		if(null!=curSelectParentMenu){
			curSelectParentMenu.setBackground(LzzColorFontMgr.smUIHeadBkColor);
		}
		if(null!=curSelectMenu){
			curSelectMenu.setBackground(LzzColorFontMgr.smUIHeadBkColor);
		}
		if(null!=curSelectMenuItem){
			curSelectMenuItem.setBackground(LzzColorFontMgr.smUIHeadBkColor);
		}
		
		if(null!=parent_menu){
			curSelectParentMenu = parent_menu;
			curSelectParentMenu.setBackground(LzzColorFontMgr.smUITextBkColor);
		}
		
		if(null!=menu){
			curSelectMenu = menu;
			curSelectMenu.setBackground(LzzColorFontMgr.smUITextBkColor);
		}
		
		if(null!=item){
			curSelectMenuItem = item;
			curSelectMenuItem.setBackground(LzzColorFontMgr.smUITextBkColor);
		}
	}
	
	protected static void selectMenuItem(JMenu menu, JMenuItem item) {
		if(null!=curSelectMenu){
			curSelectMenu.setBackground(LzzColorFontMgr.smUIHeadBkColor);
    	}
		if(null!=curSelectMenuItem){
			curSelectMenuItem.setBackground(LzzColorFontMgr.smUIHeadBkColor);
		}
		
		curSelectMenuItem = item;
		curSelectMenuItem.setBackground(LzzColorFontMgr.smUITextBkColor);
	}

	public static void setMainFrame(LzzIndexFrm mainFrame) {
		LzzMenuMgr.mainFrame = mainFrame;
	}
	
}
