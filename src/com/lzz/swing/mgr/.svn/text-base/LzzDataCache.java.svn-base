package com.lzz.swing.mgr;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import com.lzz.swing.model.LzzSensorData;
import com.lzz.swing.util.LzzPaging;
import com.lzz.swing.view.LzzTreeBusNode;

public class LzzDataCache {
	/**
	 * 所有的公交
	 */
	private static List<LzzTreeBusNode> buses = new ArrayList<LzzTreeBusNode>();
	private static Map<String, LzzTreeBusNode> busesMap = new Hashtable<String, LzzTreeBusNode>();
	private static Map<String, LzzTreeBusNode> busesNumMap = new Hashtable<String, LzzTreeBusNode>();
	/**
	 * 清除所有公交
	 */
	public static void clearBuses(){
		buses.clear();
		busesMap.clear();
		busesNumMap.clear();
	}
	/**
	 * 添加公交
	 * @param bus
	 */
	public static void addNewBuses(LzzTreeBusNode bus){
		buses.add(bus);
		busesMap.put(bus.getNodeId(), bus);
		busesNumMap.put(bus.getNodeName(), bus);
	}
	/**
	 * 获取所有公交
	 * @return
	 */
	public static List<LzzTreeBusNode> getBuses(){
		return buses;
	}
	/**
	 * 获取公交车牌号
	 * @return
	 */
	public static String getBusNum(String bus_id){
		LzzTreeBusNode node = busesMap.get(bus_id);
		if(null==node) return null;
		return node.getNodeName();
	}
	/**
	 * 获取公交车Id
	 * @return
	 */
	public static String getBusId(String bus_num){
		LzzTreeBusNode node = busesNumMap.get(bus_num);
		if(null==node) return null;
		return node.getNodeId();
	}
	
	/**
	 * 传感器所有数据
	 */
	private static Hashtable<String, List<LzzSensorData>> totalSensorDatas = new Hashtable<String, List<LzzSensorData>>();
	
	/**
	 * 将传感器数据添加进所有传感器数据数组
	 * @param data
	 */
	public static void addTotalSensorDatas(LzzSensorData data){
		if(!totalSensorDatas.containsKey(data.getBusId())){
			totalSensorDatas.put(data.getBusId(), new ArrayList<LzzSensorData>());
		}
		totalSensorDatas.get(data.getBusId()).add(data);
	}
	
	public static Hashtable<String, List<LzzSensorData>> getTotalSensorDatas(){
		return totalSensorDatas;
	}
	
	/**
	 * 当前处于报警的公交ID列表
	 */
	private static List<String> alarmBuses = new ArrayList<String>();
	/**
	 * 添加新的报警公交
	 * @param bus_id
	 */
	public static void addNewAlarmBus(String bus_id){
		alarmBuses.add(bus_id);
	}
	/**
	 * 移除报警公交
	 * @param bus_id
	 */
	public static void removeAlarmBus(String bus_id){
		if(alarmBuses.contains(bus_id)){
			alarmBuses.remove(bus_id);
		}
	}
	/**
	 * 判断是否处于报警状态
	 * @param bus_id
	 * @return
	 */
	public static boolean inAlarmBuses(String bus_id){
		return alarmBuses.contains(bus_id);
	}
	
	/**
	 * 传感器所有报警数据
	 */
	private static JSONArray totalAlarmSensorDatas = new JSONArray();
	
	/**
	 * 所有报警处理记录
	 */
	private static JSONArray totalAlarmHandleRecords = new JSONArray();
	
	/**
	 * 记录传感器报警数据
	 * @param datas
	 */
	public static void setTotalAlarmSensorData(JSONArray datas){
		totalAlarmSensorDatas = datas;
	}
	
	/**
	 * 获取所有传感器报警数据
	 */
	public static JSONArray getTotalAlarmSensorData(String start, String end){
		JSONArray datas = LzzDataRequestMgr.getAlarmLogList(start, end);
		setTotalAlarmSensorData(datas);
		return datas;
	}
	
	/**
	 * 记录报警处理记录
	 * @param datas
	 */
	public static void setTotalAlarmHandleRecords(JSONArray datas){
		totalAlarmHandleRecords = datas;
	}
	
	/**
	 * 获取所有报警处理记录数据
	 */
	public static JSONArray getTotalFaultInfo(String start, String end){
		JSONArray datas = LzzDataRequestMgr.getFaultInfoList(start, end);
		setTotalAlarmHandleRecords(datas);
		return datas;
	}
	
	/**
	 * 同公司下的用户列表
	 */
	private static JSONArray totalUsers = new JSONArray();
	
	/**
	 * 记录用户列表
	 * @param datas
	 */
	public static void setTotalUsers(JSONArray datas){
		totalUsers = datas;
	}
	
	/**
	 * 获取所有用户
	 */
	public static void getTotalUsers(){
		JSONArray datas = LzzDataRequestMgr.getUserList();
		setTotalUsers(datas);
	}
	
	/**
	 * 同公司下的公交列表
	 */
	private static JSONArray totalBuses = new JSONArray();
	
	/**
	 * 记录公交列表
	 * @param datas
	 */
	public static void setTotalBuses(JSONArray datas){
		totalBuses = datas;
	}
	
	
	/**
	 * 获取所有公交信息
	 */
	public static void getTotalBuses(){
		JSONArray datas = LzzDataRequestMgr.getUserMgrBuses().getJSONArray("data");
		setTotalBuses(datas);
	}
	/**
	 * 同公司下的公交线路列表
	 */
	private static JSONArray totalBusLines = new JSONArray();
	
	/**
	 * 记录公交线路列表
	 * @param datas
	 */
	public static void setTotalBusLines(JSONArray datas){
		totalBusLines = datas;
	}
	/**
	 * 获取所有公交信息
	 */
	public static JSONArray getTotalBusLines(){
		JSONArray datas = LzzDataRequestMgr.getUserMgrBusLines().getJSONArray("data");
		setTotalBusLines(datas);
		return datas;
	}

	/**
	 * 按页获取传感器报警数据
	 * @param page_info
	 * @return
	 */
	public static JSONObject getAlarmSensorData(String start, String end, JSONObject page_info){
		int cur_page = page_info.getInt("curPage");
		if(cur_page==1){
			getTotalAlarmSensorData(start, end);
		}
		
		int page_size = page_info.getInt("pageSize");
		
		JSONObject rslt = new JSONObject();
		JSONArray data = LzzPaging.get(totalAlarmSensorDatas, cur_page, page_size);
		
		int total_page = LzzPaging.getPageNum(totalAlarmSensorDatas, page_size);
		page_info.put("totalPage", total_page);
		
		rslt.put("data", data);
		rslt.put("pageInfo", page_info);
		return rslt;
	}
	
	/**
	 * 按页获取报警处理记录
	 * @param page_info
	 * @return
	 */
	public static JSONObject getFaultInfoDur(String start, String end,
			JSONObject page_info) {
		int cur_page = page_info.getInt("curPage");
		if(cur_page==1){
			getTotalFaultInfo(start, end);
		}
		
		int page_size = page_info.getInt("pageSize");
		
		JSONObject rslt = new JSONObject();
		JSONArray data = LzzPaging.get(totalAlarmHandleRecords, cur_page, page_size);
		
		int total_page = LzzPaging.getPageNum(totalAlarmHandleRecords, page_size);
		page_info.put("totalPage", total_page);
		
		rslt.put("data", data);
		rslt.put("pageInfo", page_info);
		return rslt;
	}
	
	/**
	 * 按页获取用户列表
	 * @param page_info
	 * @return
	 */
	public static JSONObject getUserList(JSONObject page_info, String search_key){
		int cur_page = page_info.getInt("curPage");
		if(cur_page==1){
			getTotalUsers();
		}
		
		JSONArray users = new JSONArray();
		for(int i=0; i<totalUsers.size(); i++){
			JSONObject sin_user = totalUsers.getJSONObject(i);
			String role_name = sin_user.getString("roleName");
			String name = sin_user.getString("lastName");
			if(null!=search_key
					&& !"".equals(search_key)){
				if(!name.contains(search_key)
						&& !role_name.contains(search_key)){
					continue;
				}
			}
			users.add(sin_user);
		}
		
		int page_size = page_info.getInt("pageSize");
		
		JSONObject rslt = new JSONObject();
		JSONArray data = LzzPaging.get(users, cur_page, page_size);
		
		int total_page = LzzPaging.getPageNum(users, page_size);
		page_info.put("totalPage", total_page);
		
		rslt.put("data", data);
		rslt.put("pageInfo", page_info);
		return rslt;
	}
	
	/**
	 * 按页获取公交列表
	 * @param page_info
	 * @return
	 */
	public static JSONObject getBusesList(JSONObject page_info, String search_key){
		int cur_page = page_info.getInt("curPage");
		if(cur_page==1){
			getTotalBuses();
		}
		
		JSONArray buses = new JSONArray();
		for(int i=0; i<totalBuses.size(); i++){
			JSONObject sin_bus = totalBuses.getJSONObject(i);
			String line_name = sin_bus.getString("lineName");
			String car_num = sin_bus.getString("carNum");
			if(null!=search_key
					&& !"".equals(search_key)){
				if(!car_num.contains(search_key)
						&& !line_name.contains(search_key)){
					continue;
				}
			}
			buses.add(sin_bus);
		}
		
		int page_size = page_info.getInt("pageSize");
		
		JSONObject rslt = new JSONObject();
		JSONArray data = LzzPaging.get(buses, cur_page, page_size);
		
		int total_page = LzzPaging.getPageNum(buses, page_size);
		page_info.put("totalPage", total_page);
		
		rslt.put("data", data);
		rslt.put("pageInfo", page_info);
		return rslt;
	}
	
	/**
	 * 获取角色列表
	 * @param page_info
	 * @return
	 */
	public static JSONArray getRoleList(){
		return LzzDataRequestMgr.getRoleList();
	}
	
	private static JSONObject userAuthoritys = null;
	/**
	 * 获取用户所有权限名称
	 * @return
	 */
	public static JSONObject getUserAuthoritys() {
		if(null!=userAuthoritys){
			return userAuthoritys;
		}
		userAuthoritys = LzzDataRequestMgr.getUserAuthoritys();
		return userAuthoritys;
	}
}
